---
# DC1 Tenants Networks
# Network Services in the online Docs
# Tenant provide a construct to group L3 VRFs and L2 VLANs.
# Documentation of Tenant specific information - Vlans/VRFs
tenants:
  # Tenant A Specific Information - VRFs / VLANs
  Tenant_A:
    mac_vrf_vni_base: 20000
    # mac_vrf_id_base: 30000
    vrfs:
      GOLD:
        vrf_vni: 999
        bgp:
          raw_eos_cli: no update wait-install # added to remove from vrfs
        # vtep_diagnostic:
        #   loopback: 100
        #   loopback_ip_range: 10.255.1.0/24
        svis:
          12:
            name: Gold_data
            tags: [gold_12]
            enabled: true
            # ip_address_virtual: 10.12.12.1/24 # Anycast IP address configuration with  "ip address virtual"
            ip_virtual_router_addresses: ["10.12.12.1"]
            # # Leaf Ip address so that Host1 can for BGP peering to both.
            nodes:
             Leaf1:
              ip_address: 10.12.12.2/24
             Leaf2:
              ip_address: 10.12.12.3/24
          34:
            name: Gold_data
            tags: [gold_34]
            enabled: true
            # ip_address_virtual: 10.34.34.1/24
            ip_virtual_router_addresses: ["10.34.34.1"]
            nodes:
             Leaf3:
              ip_address: 10.34.34.2/24
             Leaf4:
              ip_address: 10.34.34.3/24

          55:
            name: Gold_data
            tags: [gold_55]
            enabled: true
            ip_address_virtual: 10.55.55.1/24

            # Define node specific configuration, such as unique IP addresses.
            # nodes:
            #   < l3_leaf_inventory_hostname_1 >:
            #     # device unique IP address for node.
            #     ip_address: < IPv4_address/Mask >

            #     # EOS CLI rendered directly on the VLAN interface in the final EOS configuration
            #     # Overrides the setting on SVI level.
            #     raw_eos_cli: |
            #       < multiline eos cli >

            #     # Custom structured config added under vlan_interfaces.<interface> for eos_cli_config_gen
            #     # Overrides the setting on SVI level.
            #     structured_config: < dictionary >

            #   < l3_leaf_inventory_hostname_2 >:
            #     ip_address: < IPv4_address/Mask >


        # Dictionary of BGP peer definitions | Optional.
        # This will configure BGP neighbors inside the tenant VRF for peering with external devices.
        # The configured peer will automatically be activated for ipv4 or ipv6 address family based on the ip address.
        # Note, only ipv4 and ipv6 address families are currently supported in eos_designs.
        # For other address families, use custom_structured configuration with eos_cli_config_gen.
        bgp_peers:
          10.12.12.50:
            remote_as: 64998
            description: bgp peering to host1
            nodes: [ Leaf1, Leaf2 ]
            set_ipv4_next_hop: 10.12.12.1 # dynamically crete route-map, needed for correct IRB order
          10.34.34.50:
            remote_as: 64999
            description: bgp peering to host2
        #     password: < encrypted password >
            # send_community: < standard | extended | large | all >
            send_community: extended
        #     next_hop_self: < true | false >
        #     timers: < keepalive_hold_timer_values >
        #     maximum_routes: < 0-4294967294 >
        #     default_originate:
        #       always: < true | false >
        #     update_source: < interface >
            ebgp_multihop: 10
        #     # Nodes is required to restrict configuration of BGP neighbors to certain nodes in the network.
            nodes: [ Leaf3, Leaf4 ]
        #     # Next hop settings can be either ipv4 or ipv6 for one neighbor, this will be applied by a uniquely generated route-map per neighbor.
        #     # Next hop takes precedence over route_map_out.
            set_ipv4_next_hop: 10.34.34.1
        #     set_ipv6_next_hop: < IPv6_address >
        #     route_map_out: < route-map name >
        #     route_map_in: < route-map name >
        #     prefix_list_in: < prefix_list_name >
        #     prefix_list_out: < prefix_list_name >
            # local_as: 6510
        #     weight: < 0-65535>
        #     bfd: < true | false >


      Crimson:
        vrf_vni: 111
        bgp:
          raw_eos_cli: no update wait-install # added to remove from vrfs
        svis:
          112:
            name: Crimson_data
            tags: [crimson_112] # see node groups in the FABRIC vars
            enabled: true
            ip_virtual_router_addresses: ["10.112.112.1"]
            nodes:
             Leaf1:
              ip_address: 10.112.112.2/24
             Leaf2:
              ip_address: 10.112.112.3/24
          134:
            name: Crimson_data
            tags: [crimson_134]
            enabled: true
            ip_virtual_router_addresses: ["10.134.134.1"]
            nodes:
             Leaf3:
              ip_address: 10.134.134.2/24
             Leaf4:
              ip_address: 10.134.134.3/24

    l2vlans:
      10:
        name: Tenant_A_client_l2_only
        tags: [vmotion]
      11:
        name: check_esi_DF_odd-even
        tags: [vmotion]
      161:
        vni_override: 55161
        name: Tenant_A_NFS
        tags: [nfs]

